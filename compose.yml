services:
  load-balancer:
    image: nginx:latest
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - business-service
    networks:
      - proximity-service-network

  business-service-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: business-service-user
      POSTGRES_PASSWORD: business-service-password
      POSTGRES_DB: business_db
    ports:
      - 5432:5432
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=4"
      - "-c"
      - "max_replication_slots=4"
    volumes:
      - ./debezium/init-debezium-user.sql:/docker-entrypoint-initdb.d/init-debezium-user.sql:ro
    networks:
      - proximity-service-network

  business-service:
    build:
      dockerfile: business-service/Dockerfile
    ports:
      - 8080
    networks:
      - proximity-service-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - proximity-service-network

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://kafka:9093
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - proximity-service-network

  business-service-debezium:
    image: debezium/connect:2.5
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:9093
      GROUP_ID: debezium
      CONFIG_STORAGE_TOPIC: debezium-connect-configs
      OFFSET_STORAGE_TOPIC: debezium-connect-offsets
      STATUS_STORAGE_TOPIC: debezium-connect-status
      CONFIG_STORAGE_REPLICATION_FACTOR: 1
      OFFSET_STORAGE_REPLICATION_FACTOR: 1
      STATUS_STORAGE_REPLICATION_FACTOR: 1
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    depends_on:
      - business-service-db
      - kafka
    networks:
      - proximity-service-network

  business-location-service:
    build:
      dockerfile: business-location-service/Dockerfile
    ports:
      - 8080
    networks:
      - proximity-service-network

networks:
  proximity-service-network:
    driver: bridge